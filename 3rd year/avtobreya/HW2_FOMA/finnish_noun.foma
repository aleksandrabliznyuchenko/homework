# определяем набор букв и звуков для финского

define Consonant b | c | d | f | g | h | j | k | l | m | n | p | q | r | s | t | v | w | x | z ;
define FrontVowel ä | ö | y ;
define NeutralVowel e | i ;
define BackVowel a | o | u ;
define Vowel FrontVowel | NeutralVowel | BackVowel | A | E;
define Letter Vowel | Consonant;

# определяем финские падежи

define Case "+Nom" | "+Gen" | "+Part" | "+In" | "+All" ;
define Number "+Sg" | "+Pl" ; 

# определяем основы переднего ряда (те, в которых встречаются передние (FrontVowel) и нейтральные (NeutralVowel) гласные)
# и основы заднего ряда (те основы, в которых встречаются задние (BackVowel) и нейтральные (NeutralVowel) гласные)

define FrontStem [Consonant* [ FrontVowel | NeutralVowel ] ]+ Consonant*;
define BackStem [Consonant* [ BackVowel | NeutralVowel ] ]* [Consonant* BackVowel] [Consonant* [ BackVowel | NeutralVowel ] ]* Consonant*;
define Stem Letter+;

define Input Stem Number Case;

# к существительным во множественном числе Номинатива добавляется окончание -t, после него могут идти падежные окончания

define NomPl "+Pl" "+Nom" -> "^" t || _ ;
define NomSg "+Sg" "+Nom" -> "^" || _ ;
define Nominatives NomPl .o. NomSg ;

# в генитиве к основе, оканчивающейся двумя гласными, прибавляется показатель -den
# к остальным основам в генитиве прибавляется показатель -en

define GenDen "+Gen" -> d e n || Vowel Vowel "+Pl" _ ;
define Gen "+Gen" -> E n || _ ;
define Genetive GenDen .o. Gen ;

# показатель партитива -ta прибавляется к основам на две гласные, либо согласные
# к остальным основам в партитиве прибавляется показатель -a
# в инессиве и аллативе к основам прибавляются показатели -ssa и -lla соответственно

define PartTa "+Part" -> t A || [ Consonant Vowel Vowel | Consonant ] Number _ ;
define PartA "+Part" -> A || _ ;

define LocativeCases "+In" -> s s A , "+All" -> l l A || _ ;

define OtherCases PartTa .o. PartA .o. LocativeCases ;

# чередования основ во множественном числе
# "+Sg" становится "^"
# -ä и -i опускаются перед показателями множ. числа
# -а переходит в -о, если двусложная основа оканчивается на эти гласные, а первый гласный основы - a | e | i
# -а опускается, если двусложная основа оканчивается этой буквой, а первый гласный основы - o | u
# 
# "+Pl" становится "^" i

define Sg "+Sg" -> "^" || _ ;
define OmitA ä -> 0, i -> 0 || _ "+Pl";
define Ai2Oi a -> o || [ a | e | i ] Vowel* Consonant+ _ "+Pl";
define Ai2i a -> 0 || [ o | u ] Vowel* Consonant+ _ "+Pl";
define OmitFirst Vowel -> 0 || _ Vowel "+Pl" Consonant;
define Pl "+Pl" -> "^" i || _ ;

define NumberInfl Sg .o. OmitA .o. Ai2i .o. Ai2Oi .o. OmitFirst .o. Pl ;

# -i переходит в -j, если оказывается между двумя любыми гласными
define JotPl i -> j || Vowel "^"* _ "^"* Vowel ;
define HarmonyBack A -> a || BackStem "^" Letter* _;
define HarmonyFront A -> ä || FrontStem "^" Letter* _;

define Phonetics JotPl .o. HarmonyBack .o. HarmonyFront ;

# ?
define DoublePTK p p -> p , t t -> t , k k -> k || Letter _ "^"* Vowel "^"* Consonant [ .#. | Consonant ] ;
define SingleP p -> v || Vowel _ "^"* Vowel "^"* Consonant [ .#. | Consonant ] ;
define SingleTK t -> d , k -> 0 || Letter _ "^"* Vowel "^"* Consonant [ .#. | Consonant ] ; 
define TwoLetter m p -> m m , n t -> n n , n k -> n g , l t -> l l , r t -> r r || Letter _ "^"* Vowel "^"* Consonant [ .#. | Consonant ] ;
define ThreeLetter l k e -> l j e , r k e -> r j e , h k e -> h j e , u k u -> u v u || Letter _ "^"* Consonant [ .#. | Consonant ] ;
define N2M i n -> i m , t ö n -> t t ö m || _ "^" Vowel;
define EOmit E -> 0 || Vowel "^" _;
define EReal E -> e || _;

define Alternations N2M  .o. EOmit .o. EReal .o. ThreeLetter .o. TwoLetter .o. SingleP .o. SingleTK .o. DoublePTK ;

# ?
define Affixes Nominatives .o. Genetive .o. OtherCases .o. NumberInfl .o. Alternations .o. Phonetics;

# ?
#define Cleanup "^" -> 0 || _ ;

# ?
define Grammar Input .o. Affixes .o. Cleanup ;
push Grammar
